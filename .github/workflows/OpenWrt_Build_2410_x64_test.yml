name: OpenWrt_Build_2410_x64_test

on:
#  schedule:
#    - cron: 5 6 * * 0
  workflow_dispatch:
  watch:
    types: started

jobs:
  build:
    runs-on: ubuntu-24.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Show system
      run: |
        echo -e "Total CPU cores\t: $(nproc)"
        cat /proc/cpuinfo | grep 'model name'

    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 1024
        temp-reserve-mb: 512
        root-reserve-mb: 4608
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'

    - name: Checkout
      uses: actions/checkout@main

    - name: Init build dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo /bin/bash -c "$(curl -sL https://git.io/vokNn)"
        sudo -E apt-fast -y -qq install asciidoc bash bcc bin86 binutils bison bzip2 clang-15 llvm-15 clang llvm file flex g++ g++-multilib gawk gcc gcc-multilib gettext git gzip help2man intltool libboost-dev libelf-dev libncurses-dev libncurses5-dev libssl-dev libthread-queue-any-perl libusb-dev libxml-parser-perl make patch perl-modules python3-dev python3-pip python3-pyelftools python3-setuptools rsync sharutils swig time unzip util-linux wget xsltproc zlib1g-dev zip zstd
        sudo -E apt-fast -y -qq install dos2unix dwarves quilt npm jq
        sudo -E apt install build-essential libjansson-dev libnftnl-dev pkg-config
        sudo -E npm install -g pnpm
        pip3 install --user -U pylibfdt --break-system-packages
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo -E git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
        sudo -E git config --global core.abbrev auto
        df -h

    - name: Prepare Mixedwrt
      run: |
        sudo chown -R runner:runner /home/runner/work/OpenWrt_Build_2410_x64
        cp -r $GITHUB_WORKSPACE/diy_script/. ./
        /bin/bash 01_get_ready.sh

    - name: Prepare Package
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        cp -r $GITHUB_WORKSPACE/diy_script/. ./
        /bin/bash 02_prepare_package.sh
        /bin/bash 00_target_only.sh
        /bin/bash 04_remove_upx.sh

    - name: Load .config
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        cp -rf ../config/2410_x64_test.config .config

    - name: Convert Translation
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        /bin/bash 03_convert_translation.sh

    - name: Add ACL
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        /bin/bash 05_create_acl_for_luci.sh -a

    - name: Fix Permissions
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        sudo -E chmod -R 755 ./08_fix_permissions.sh
        /bin/bash 08_fix_permissions.sh

    - name: Make Config
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        make defconfig

    - name: Get Architecture
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        TARGET_DEVICE_ARCH="$(grep "^CONFIG_TARGET_.*_.*=y$" ".config" | head -n 1 | sed 's/^CONFIG_TARGET_//g' | awk -F '_' '{print $1}')"
        echo "TARGET_DEVICE_ARCH=${TARGET_DEVICE_ARCH}" >>$GITHUB_ENV
        latest_release="$(curl -s https://github.com/openwrt/openwrt/tags | grep -Eo "v[0-9\.]+\-*r*c*[0-9]*.tar.gz" | sed -n '/[2-9][4-9]/p' | sed -n 1p | sed 's/.tar.gz//g' | sed 's/v//g')"
        echo "latest_release=${latest_release}" >>$GITHUB_ENV

    - name: Cache
      uses: HiGarfield/cachewrtbuild@main
      with:
        mixkey: ${{ env.TARGET_DEVICE_ARCH }}
        prefix: ${{ github.workspace }}/openwrt

    - name: Make Download
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        make download -j50

    - name: Compile Openwrt
      working-directory: ${{ github.workspace }}/openwrt
      id: compileopenwrt
      continue-on-error: true
      run: |
        make -j$(($(nproc) + 1)) package/network/utils/nftables/refresh V=s
        IGNORE_ERRORS=1 make -j$(($(nproc) + 1))
        echo $?

    - name: If Error
      working-directory: ${{ github.workspace }}/openwrt
      if: steps.compileopenwrt.outcome == 'failure'
      run: |
        cat ./.config
        echo '================================================================'
        make -j1 V=s

    - name: Organize files
      id: organize
      run: |
        mkdir -p ./artifact/
        build_date=$(TZ=Asia/Shanghai date "+%Y.%m.%d")
        cp -rf $(find openwrt/bin/targets/ -type f -name "*squashfs*efi*img*") ./artifact/
        cd artifact
        echo 'artifact文件夹下整理前有以下文件：'
        ls -Ahl
        md5=$(md5sum *squashfs-combined.img.gz | awk '{print $1}') 2>/dev/null || true
        md5_efi=$(md5sum *squashfs-combined-efi.img.gz | awk '{print $1}') 2>/dev/null || true
        echo "md5=$md5" > md5sum.txt
        echo "md5_efi=$md5_efi" >> md5sum.txt
        rm -rf sha256sums
        echo 'artifact文件夹下整理后有以下文件：'
        ls -Ahl

    - name: Upload Firmware To Artifact
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt_2410_x64_test_$build_date
        path: ./artifact/

    - name: Create release
      id: create_release
      uses: ncipollo/release-action@main
      with:
        name: OpenWrt_2410_x64_test
        allowUpdates: true
        prerelease: false
        tag: OpenWrt_2410_x64_test
        commit: "24.10"
        replacesArtifacts: true
        token: ${{ secrets.GH_TOKEN }}
        artifacts: ./artifact/*.*

    - name: Print Disk Space After
      run: df -h
